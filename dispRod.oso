OpenShadingLanguage 1.00
# Compiled by oslc 1.7.4.pixar38bde12
# options: 
shader dispRod
param	float	depth	0		%read{13,13} %write{2147483647,-1}
param	float	width	0		%read{8,9} %write{2147483647,-1}
param	float	fuzz	0.02		%read{8,18} %write{2147483647,-1}
param	float	where	0.5		%read{6,6} %write{2147483647,-1}
param	float	repeatCount	8		%read{0,0} %write{2147483647,-1}
oparam	float	resultF	0		%read{22,22} %write{13,22}
global	float	v	%read{0,19} %write{2147483647,-1}
local	float	dist	%read{10,10} %write{7,7}
local	float	inDisk	%read{12,12} %write{11,11}
local	float	vv	%read{6,6} %write{5,5}
temp	float	$tmp1	%read{2,5} %write{0,0}
const	float	$const2	1		%read{2,21} %write{2147483647,-1}
const	string	$const3	"mod"		%read{1,1} %write{2147483647,-1}
temp	float	$tmp2	%read{4,4} %write{3,3}
temp	float	$tmp3	%read{3,3} %write{2,2}
temp	float	$tmp4	%read{5,5} %write{4,4}
temp	float	$tmp5	%read{7,7} %write{6,6}
temp	float	$tmp6	%read{11,11} %write{10,10}
temp	float	$tmp7	%read{10,10} %write{8,8}
temp	float	$tmp8	%read{10,10} %write{9,9}
temp	float	$tmp9	%read{13,13} %write{12,12}
temp	float	$tmp10	%read{20,20} %write{16,16}
const	float	$const4	0.2		%read{14,15} %write{2147483647,-1}
temp	float	$tmp11	%read{16,16} %write{14,14}
temp	float	$tmp12	%read{16,16} %write{15,15}
temp	float	$tmp13	%read{20,20} %write{19,19}
const	float	$const5	0.89999998		%read{17,18} %write{2147483647,-1}
temp	float	$tmp14	%read{19,19} %write{17,17}
temp	float	$tmp15	%read{19,19} %write{18,18}
temp	float	$tmp16	%read{21,21} %write{20,20}
temp	float	$tmp17	%read{22,22} %write{21,21}
code ___main___
# dispRod.osl:13
# 	float vv = mod(repeatCount*v,1);
	mul		$tmp1 repeatCount v 	%filename{"dispRod.osl"} %line{13} %argrw{"wrr"}
	functioncall	$const3 6 	%argrw{"r"}
# /opt/pixar/RenderManProServer-21.4/lib/osl/include/stdosl.h:135
# PERCOMP1 (round)
	div		$tmp3 $tmp1 $const2 	%filename{"/opt/pixar/RenderManProServer-21.4/lib/osl/include/stdosl.h"} %line{135} %argrw{"wrr"}
	floor		$tmp2 $tmp3 	%argrw{"wr"}
	mul		$tmp4 $const2 $tmp2 	%argrw{"wrr"}
	sub		vv $tmp1 $tmp4 	%argrw{"wrr"}
# dispRod.osl:15
# 	dist=abs(vv-where);
	sub		$tmp5 vv where 	%filename{"dispRod.osl"} %line{15} %argrw{"wrr"}
	abs		dist $tmp5 	%argrw{"wr"}
# dispRod.osl:16
#     inDisk =1-smoothstep(width-fuzz,width+fuzz,dist);
	sub		$tmp7 width fuzz 	%line{16} %argrw{"wrr"}
	add		$tmp8 width fuzz 	%argrw{"wrr"}
	smoothstep	$tmp6 $tmp7 $tmp8 dist 	%argrw{"wrrr"}
	sub		inDisk $const2 $tmp6 	%argrw{"wrr"}
# dispRod.osl:17
# 	resultF=-inDisk*depth;
	neg		$tmp9 inDisk 	%line{17} %argrw{"wr"}
	mul		resultF $tmp9 depth 	%argrw{"wrr"}
# dispRod.osl:20
# 	resultF*=1-(smoothstep(0.2-fuzz,0.2+fuzz,v)-smoothstep(0.9-fuzz,0.9+fuzz,v));
	sub		$tmp11 $const4 fuzz 	%line{20} %argrw{"wrr"}
	add		$tmp12 $const4 fuzz 	%argrw{"wrr"}
	smoothstep	$tmp10 $tmp11 $tmp12 v 	%argrw{"wrrr"}
	sub		$tmp14 $const5 fuzz 	%argrw{"wrr"}
	add		$tmp15 $const5 fuzz 	%argrw{"wrr"}
	smoothstep	$tmp13 $tmp14 $tmp15 v 	%argrw{"wrrr"}
	sub		$tmp16 $tmp10 $tmp13 	%argrw{"wrr"}
	sub		$tmp17 $const2 $tmp16 	%argrw{"wrr"}
	mul		resultF resultF $tmp17 	%argrw{"wrr"}
	end
